<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.1102.2255                               -->
<workbook source-build='10.2.7 (10200.17.1102.2255)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SVMMultipleTests GROUPED' inline='true' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SVMMultipleTests GROUPED' name='textscan.007m6bw1rrntgu13picsg07l3l2q'>
            <connection class='textscan' directory='D:/NCI Studies/Final Project/Configuration Manual Code' filename='SVMMultipleTests GROUPED.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.007m6bw1rrntgu13picsg07l3l2q' name='SVMMultipleTests GROUPED.csv' table='[SVMMultipleTests GROUPED#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Type' ordinal='1' />
            <column datatype='integer' name='positive' ordinal='2' />
            <column datatype='real' name='Accuracy' ordinal='3' />
            <column datatype='real' name='Kappa' ordinal='4' />
            <column datatype='real' name='AccuracyLower' ordinal='5' />
            <column datatype='real' name='AccuracyUpper' ordinal='6' />
            <column datatype='real' name='AccuracyNull' ordinal='7' />
            <column datatype='real' name='AccuracyPValue' ordinal='8' />
            <column datatype='real' name='McnemarPValue' ordinal='9' />
            <column datatype='real' name='Sensitivity' ordinal='10' />
            <column datatype='real' name='Specificity' ordinal='11' />
            <column datatype='real' name='Pos_Pred_Value' ordinal='12' />
            <column datatype='real' name='Neg_Pred_Value' ordinal='13' />
            <column datatype='real' name='Precision' ordinal='14' />
            <column datatype='real' name='Recall' ordinal='15' />
            <column datatype='real' name='F1 1' ordinal='16' />
            <column datatype='real' name='Prevalence' ordinal='17' />
            <column datatype='real' name='Detection_Rate' ordinal='18' />
            <column datatype='real' name='Detection_Prevalence' ordinal='19' />
            <column datatype='real' name='Balanced_Accuracy' ordinal='20' />
            <column datatype='integer' name='Size' ordinal='21' />
            <column datatype='real' name='AUC' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Accuracy]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Accuracy</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Kappa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Kappa]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Kappa</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccuracyLower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AccuracyLower]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>AccuracyLower</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccuracyUpper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AccuracyUpper]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>AccuracyUpper</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccuracyNull</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AccuracyNull]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>AccuracyNull</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccuracyPValue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AccuracyPValue]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>AccuracyPValue</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>McnemarPValue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[McnemarPValue]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>McnemarPValue</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sensitivity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sensitivity]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Sensitivity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Specificity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Specificity]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Specificity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pos_Pred_Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pos_Pred_Value]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Pos_Pred_Value</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neg_Pred_Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Neg_Pred_Value]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Neg_Pred_Value</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precision]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Precision</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recall]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Recall</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F1 1]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>F1 1</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prevalence]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Prevalence</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Detection_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Detection_Rate]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Detection_Rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Detection_Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Detection_Prevalence]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Detection_Prevalence</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Balanced_Accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Balanced_Accuracy]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Balanced_Accuracy</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Size]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>Size</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AUC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AUC]</local-name>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias>AUC</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SVMMultipleTests GROUPED.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[AUC]' role='measure' type='quantitative' />
      <column caption='Accuracy Lower' datatype='real' name='[AccuracyLower]' role='measure' type='quantitative' />
      <column caption='Accuracy Null' datatype='real' name='[AccuracyNull]' role='measure' type='quantitative' />
      <column caption='Accuracy P Value' datatype='real' name='[AccuracyPValue]' role='measure' type='quantitative' />
      <column caption='Accuracy Upper' datatype='real' name='[AccuracyUpper]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Accuracy]' role='measure' type='quantitative' />
      <column caption='Balanced Accuracy' datatype='real' name='[Balanced_Accuracy]' role='measure' type='quantitative' />
      <column caption='Detection Prevalence' datatype='real' name='[Detection_Prevalence]' role='measure' type='quantitative' />
      <column caption='Detection Rate' datatype='real' name='[Detection_Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[F1 1]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Kappa]' role='measure' type='quantitative' />
      <column caption='Mcnemar P Value' datatype='real' name='[McnemarPValue]' role='measure' type='quantitative' />
      <column caption='Neg Pred Value' datatype='real' name='[Neg_Pred_Value]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pos Pred Value' datatype='real' name='[Pos_Pred_Value]' role='measure' type='quantitative' />
      <column datatype='real' name='[Precision]' role='measure' type='quantitative' />
      <column datatype='real' name='[Prevalence]' role='measure' type='quantitative' />
      <column datatype='real' name='[Recall]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Sensitivity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Size]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Specificity]' role='measure' type='quantitative' />
      <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
          <alias key='&quot;angryLove&quot;' value='Angry and Love' />
          <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
          <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
          <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
          <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
          <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
          <alias key='&quot;sadLove&quot;' value='Sad and Love' />
          <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
          <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
        </aliases>
      </column>
      <column caption='Positive' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column-instance column='[AUC]' derivation='Avg' name='[avg:AUC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Accuracy]' derivation='Avg' name='[avg:Accuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Kappa]' derivation='Avg' name='[avg:Kappa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Precision]' derivation='Avg' name='[avg:Precision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recall]' derivation='Avg' name='[avg:Recall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sensitivity]' derivation='Avg' name='[avg:Sensitivity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Specificity]' derivation='Avg' name='[avg:Specificity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Accuracy]' derivation='Stdev' name='[std:Accuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Kappa]' derivation='Stdev' name='[std:Kappa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sensitivity]' derivation='Stdev' name='[std:Sensitivity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Specificity]' derivation='Stdev' name='[std:Specificity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AUC]' derivation='Sum' name='[sum:AUC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Accuracy]' derivation='Sum' name='[sum:Accuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AccuracyLower]' derivation='Sum' name='[sum:AccuracyLower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AccuracyNull]' derivation='Sum' name='[sum:AccuracyNull:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AccuracyPValue]' derivation='Sum' name='[sum:AccuracyPValue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AccuracyUpper]' derivation='Sum' name='[sum:AccuracyUpper:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Balanced_Accuracy]' derivation='Sum' name='[sum:Balanced_Accuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Detection_Prevalence]' derivation='Sum' name='[sum:Detection_Prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Detection_Rate]' derivation='Sum' name='[sum:Detection_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1 1]' derivation='Sum' name='[sum:F1 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Kappa]' derivation='Sum' name='[sum:Kappa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[McnemarPValue]' derivation='Sum' name='[sum:McnemarPValue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Neg_Pred_Value]' derivation='Sum' name='[sum:Neg_Pred_Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pos_Pred_Value]' derivation='Sum' name='[sum:Pos_Pred_Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Precision]' derivation='Sum' name='[sum:Precision:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prevalence]' derivation='Sum' name='[sum:Prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recall]' derivation='Sum' name='[sum:Recall:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sensitivity]' derivation='Sum' name='[sum:Sensitivity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Size]' derivation='Sum' name='[sum:Size:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Specificity]' derivation='Sum' name='[sum:Specificity:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.142857' measure-ordering='alphabetic' measure-percentage='0.857143' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Accuracy]' palette='tableau-orange-light' type='interpolated' />
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Balanced_Accuracy:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[med:Kappa:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[med:Specificity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Kappa:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Specificity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Kappa:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Specificity:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[med:Accuracy:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:AccuracyLower:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:F1 1:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Detection_Prevalence:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:AccuracyNull:qk]&quot;</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Specificity:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Sensitivity:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[med:Sensitivity:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Sensitivity:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Prevalence:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Sensitivity:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:AUC:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:AUC:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Pos_Pred_Value:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:AccuracyPValue:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:McnemarPValue:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Neg_Pred_Value:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Precision:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[attr:Size:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Recall:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Size:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Size:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Recall:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Size:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_719450049865207808:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_933652507175960576:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_176484819763564544:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:AccuracyUpper:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Detection_Rate:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Accuracy:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[sum:Accuracy:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AUC'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AUC between Groups of Reactions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' name='[AUC]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[AUC]' derivation='Avg' name='[avg:AUC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' value='28' />
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:AUC:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:AUC:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:AUC:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Accuracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Accuracy]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Accuracy]' derivation='Avg' name='[avg:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' scope='rows' value='Average Accuracy' />
            <format attr='subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='75' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='-90' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' value='bold' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' />
              <text column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='157' />
                <format attr='maxheight' value='157' />
                <format attr='minwidth' value='750' />
                <format attr='maxwidth' value='750' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Accuracy:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Kappa'>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Kappa]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Kappa]' derivation='Avg' name='[avg:Kappa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' scope='rows' value='Average Kappa' />
            <format attr='subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' field-type='quantitative' max='0.80000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='75' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='-90' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' />
              <text column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='155' />
                <format attr='maxheight' value='155' />
                <format attr='minwidth' value='750' />
                <format attr='maxwidth' value='750' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='277' />
                <format attr='maxheight' value='277' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Kappa:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Precision'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precision between Groups of Reactions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' name='[Precision]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Precision]' derivation='Avg' name='[avg:Precision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]' field-type='quantitative' max='0.80000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' value='28' />
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Recall'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Recall between Groups of Reactions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' name='[Recall]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Recall]' derivation='Avg' name='[avg:Recall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' value='28' />
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Recall:qk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Recall:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Recall:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sensitivity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Sensitivity]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Sensitivity]' derivation='Avg' name='[avg:Sensitivity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Sensitivity:qk]' scope='rows' value='Average Sensitivity' />
            <format attr='subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Sensitivity:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Sensitivity:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='75' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='-90' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' />
              <text column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Sensitivity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='169' />
                <format attr='maxheight' value='169' />
                <format attr='minwidth' value='750' />
                <format attr='maxwidth' value='750' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='277' />
                <format attr='maxheight' value='277' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='277' />
                <format attr='maxheight' value='277' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Sensitivity:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AUC between Groups of Reactions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column caption='AVG([Size]*2)' datatype='real' name='[Calculation_933652507175960576]' role='measure' type='quantitative' user:unnamed='Size'>
              <calculation class='tableau' formula='AVG([Size]*2)' />
            </column>
            <column datatype='integer' name='[Size]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_933652507175960576]' derivation='User' name='[usr:Calculation_933652507175960576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_933652507175960576:qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_933652507175960576:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_933652507175960576:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_933652507175960576:qk]' scope='rows' value='Size' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='253' />
                <format attr='maxheight' value='253' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[usr:Calculation_933652507175960576:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Specificity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Specificity]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Specificity]' derivation='Avg' name='[avg:Specificity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Specificity:qk]' scope='rows' value='Average Specificity' />
            <format attr='subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Specificity:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Specificity:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='75' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='-90' />
            <format attr='font-size' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='11' />
            <format attr='font-weight' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' />
              <text column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Specificity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='166' />
                <format attr='maxheight' value='166' />
                <format attr='minwidth' value='750' />
                <format attr='maxwidth' value='750' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='277' />
                <format attr='maxheight' value='277' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='277' />
                <format attr='maxheight' value='277' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='277' />
                <format attr='maxheight' value='277' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Specificity:qk]</rows>
        <cols>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Standard Deviation'>
      <table>
        <view>
          <datasources>
            <datasource caption='SVMMultipleTests GROUPED' name='federated.1di7x2a0tscqi81eebioe1n4jfdc' />
          </datasources>
          <datasource-dependencies datasource='federated.1di7x2a0tscqi81eebioe1n4jfdc'>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Accuracy]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Kappa]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Sensitivity]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Specificity]' role='measure' type='quantitative' />
            <column caption='Type1' datatype='string' name='[Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;angryHaha&quot;' value='Angry and Haha' />
                <alias key='&quot;angryLove&quot;' value='Angry and Love' />
                <alias key='&quot;angrySad&quot;' value='Angry and Sad' />
                <alias key='&quot;angryWow&quot;' value='Angry and Wow' />
                <alias key='&quot;hahaLove&quot;' value='Haha and Love' />
                <alias key='&quot;hahaSad&quot;' value='Haha and Sad' />
                <alias key='&quot;hahaWow&quot;' value='Haha and Wow' />
                <alias key='&quot;sadLove&quot;' value='Sad and Love' />
                <alias key='&quot;wowHaha&quot;' value='Wow and Haha' />
                <alias key='&quot;wowSad&quot;' value='Wow and Sad' />
              </aliases>
            </column>
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Accuracy]' derivation='Stdev' name='[std:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Kappa]' derivation='Stdev' name='[std:Kappa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sensitivity]' derivation='Stdev' name='[std:Sensitivity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Specificity]' derivation='Stdev' name='[std:Specificity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Accuracy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Kappa:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Sensitivity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1di7x2a0tscqi81eebioe1n4jfdc].[std:Specificity:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' value='185' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' value='29' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[Multiple Values]</rows>
        <cols>([federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk] / [federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Precision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[avg:Precision:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]</field>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]</field>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AUC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]</field>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Accuracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Kappa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sensitivity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Specificity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Standard Deviation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[:Measure Names]</field>
            <field>[federated.1di7x2a0tscqi81eebioe1n4jfdc].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AUC' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Accuracy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd3hUZfq/7+kzmfTeeyiBkBB6R0VUREQEXV17WXXdXV3XXdet/ly3fHd1
      XXtv2EVpAkoR6SG0QCCNBNJ7T6aX8/7+AJGewIAzyLmvy+syM+ccPnPm/cx5y/M8r0IIIZCR
      uUhReluAjIw3kQ0gc1EjG0DmokY2gMxFzUVjAIfD4W0JMj6IRwawdTbQanJxIUwjyZNdMidD
      7cnJ3YWLuf7Pi8gYNZlrp09h4MABpMZHolNfNA8WmQschSfrAPa2A6xYtYb89RvZvr+BoJgk
      UtIGcMkV1zBheDqBBh1KpQLFuVR8ltjtdnQ6nbdlyPgYHhngCEJg7qhi2QfvMH/JKpp7XGiC
      4rnu1vu45bpLiA3SnwOpniEbQOZkeNQFctt6KC/aybq137BjXxVdPSa0Mdn87P5rydDW8fxL
      z+IOjObxOcPPlV4ZmXOKRwZo2zqfWx6dT1hSJpMnTWXcpKmMy07FcHgM0FSwmrXVDYBsABnf
      xKMuUFfZZvLaA8lKiyMyLBiNWnlMf7+3vRGzMoDoEP9zINUz5C6QzMnwaLomMCUdx/59NNsE
      WrUShWSnLO9rFi3Pp8cNAWExPtH4ZWROhUcGsBat4Zllm3FLqkMvKDQYbNV8uOB9yhrlhScZ
      38ejMYDN3ItLEt8vhClAcrtxOOw4nG7P1clcvAgX1Tu+4qW3F9HiDOS6+x/h6pGJxzVYO7sX
      v8lzC/NwSke/Hsu9/3qMCQF2Fi94l7Vb9tPrVpKYdRm/ePAmYgzf/+57ZIDg7KmMcHzE3554
      ipuumYSqp5Klny8katR9ZMQZPLm0byAcVBVuY1tRNcqAGEZNGEtiqN9x6xo29qxdyd6G3mNe
      VWtjmX7DpYRILpor9rB1z35MDogdkMuYnAEYNb6wOuK7VG56i6tn/4Gw8VOJVeznrlnX8OS7
      n/Hg9IGnPa+zfCvf1CZym0NQvOxl/vPuZhISYtApXGx69w8s2VLEsneeJDnocNMXHiBJblG6
      /kPxwE+uEVOnTBFTL71c3PSrf4g9td1C6uNct8smaos2ibdeekG89Np8kVdcLxzuE8+S3A5R
      X5ovPn77FfG/514QHy5eK2o7LEKSJCFJbtFRu08snP+6eO6FV8WyDfuEyeE66b9ts9nO8LO5
      RNGqV8W0rGQREREuIqMTxPg7/iFaTI7jjmwT/7phtAgPDz/yn1GnFIGJc0WJEKJ4yb/EhJxB
      IiYqQoSHh4uE9DHiyS92nJGWiw+TeP3eySJ7zh9ERYdVOHrrxV/mDBU5d70s3Kc5S3I0iedu
      v0RMvf8F0WJ1iZ6Gg2J/TbOwuVzCaesRO+Y/IlIn3S2KG61HzvFoDKBQKBk4+WZe/OBzPv/k
      YxYsXMj7/3ucYfGBfa7+Nu77ltffWYzNGI6/soMFb79O/sGOE47rrtrCy298QavLj+ioMNrL
      1vHKm0vpkQSu7irefflNSroURIao2brsfRasK8Eteb62Jzm6eff//oEt9+cUVDey+eO/IK19
      jhe+rT/uyDAe+zSf1tbWQ/81l3DPiCSm3HszgwCzSXDJvU+RV1pFc0M5j1/lxxtvLvNY348a
      RxVb9lq5fOZMkkL0aPxjuWreVVi25tFwqnOEoG7rMj7eZeFnP7+FCL2KgJgUtA15vPz8s/zl
      sYd47J39PPTI/SRFfL8w61EXSEg28pe+w0fLttJh+77Pb4jK4IGHf0tugt8pznSzL38zxmFX
      cudNl6JxdhD+8Rvk55cyOn0C2qOOtLQ2oUnIYfa8OcQHqanb+y1vf7SXHiHRUbiJ9pBh3HXz
      TaQEKyiK+Yz5W3ZimjKYYK3Kk4+G01bExkJ/7nziOuIMasS4mdw4bT6rvsnDNDOZk85tCTfN
      Gz5gac9AXpw9EYCsa3/BMD9/tAjsJgsSCkLDgz3S9qPHbKJDQEZQEN99i36B4egtxXQD8Sc5
      RUhWlrz3FurRP+WaId/f37pdK3n99bU4rFb08eMYOCABjULA4Z9oj54Arvot/O3f79Pg1GFr
      O0i7S4fO3olVGYBBc7pLd1Fbp2RIVgYGtQK1IZhBA9NwNlTTKR17ZPjAMaRpmvh66UIWL17M
      V+t2Ez9hEtFKO3VV7cSmDiUmVI9CpSN+wDDCumtpOAcDcHdbLfX+sQwODwJAoQsgNTEGU30d
      vac6p7eGV16eT+51DzBhcAQAOqM/WgW0HdzC3x+cxzPr/fjjQ9d7rO9HjdGfUAQdXV24Dr9k
      6m7Gagwn9BSnWCpW8NJqO/fcfQ3+RzW9CQ+8TElJEVvXL+PRaWp+df+fKG02H3nfoydA58ES
      euJyefyRh8h/45dUDb2FBxP38N+NegKDtKc504bFrsGg1Rz+W4neoAfRjcMBHBU6pNT6E+qv
      ZFdtFV1aJVabIDssCKXCidXiRhtmQHW4v6VWG9BprVitAuEnjskBcLvdWK3Wfn82O2p0Vgvt
      JhNWqz+IXto7Taj8DGC1crIrlXz7KZ9t0/Pc01PQOg4dI7ls7PvqNR75x/uQNIW3Pnqckclh
      Z6Tl4iOS3IFa3lmxjPKrMknU9rBq0Rr0ObcTeLJ772zng+deI3TqT5g4MOLQvZWcNNRUowiM
      JirEiDEsgZEThmF5fRnVLR2kBx96tnhkAD//ACShQG8wEBQYQEddPc5UDU01BVQ324lLPtVM
      kAGj1k6v1X74bzdmkxkUAeiPWawV1BaspqAzklsfmE1isIbqPd/y4ZdLGZp1H0ajCqupF6cE
      WiU4nb1YrUb8/RQoFIpjVn7PdCVYGZ1JmrKKgvpeZo9Mwd3dxP7qGsJyMwgzGDjR3t2sfPcz
      gq+5n0viA1ErD7myefeXPPzH9xj74P/jkTuuJT5Y5xPRsb6Ngavv/CkvzvkTDz5YQ5K6kWUb
      Jf789gyMBgP7V77G03kKnvr1bUQG6Wkp38WCtbXc9uFdpIYaD91faxdLXvgDiw9qSY8PRSlZ
      KM3fSNikuxmWHI3BcOgb9MgAhswxTAsupMnmZNT4KXz5zKv8bI2blAnziAk5XWMLITVdzcbt
      hUwZkoDR2cruwjL0KVcTckzrcNHZ1IZbHYtGrQSFEp1eD+YWOix6kgfE8OWqAiobh5AZpaa8
      YAed0SnEqj3r/wNodencdNMQ/vjozwno+iXOXR/xVp6K1/85Ho2QKN36NQcVacwYOxCQaN74
      IR9VR/DkE9ehUnz3IWx8/cZLdCaNYVi0iu1rl7MdUPknMH36KM77RLFwULV3B3sPNqMOjCVn
      ZDbRgfqTGlA4e9mdl0d1uwldUCw5uTnEBOux9TSTv2kz7bbvj40ZMpFxAyPPq/SUyXezdHEY
      z7+1iFZnGi989ipzJqQD4LT20NapODLZUVteQsKc33Fbbtj3n00fya0PP47z7Q/ZXdmMU+iY
      cNe/+c3P5xKh/77ZexQLJCQnna3tKPxDCFRa2LNrF/VdLlKzRjE4MfS0A4zm4nW8OX8ZqugU
      /KRuatqU/OS++xmZFEzNzq9YUaLm1lsux3FwE8+/uhRdVDxBfmq6m2vpDRzO7341Fz9rA2/9
      9380aGKIDlRQV9dB9tW3MXdixlGN8BBnHgsk6KzdxXN/eoyXF29FHTmMu/70D/7808loFRL/
      vmkQryvv58AnjyKsrbzy2C0sF/N4/9l7CD1yf2v44xWz+N+m8mOurE+7kX2FbxNzBmrOFCFc
      FK96k1/+5h/sqGpH5RfByJt+z7Jn70OnPPbeuC3NfPq/v/DES1/Q0G1FFxDFz55ZxD9vzqa6
      4ANmT7mDMpcWxeF7OvOJZXz620vOo/ofEE9ma7tL14qnnnpKvPHV7rM42yU6avaKhR9/KD5e
      8KUoru0U3y0D1BV+K95fuEGYhRBCcouu+lLx9aJPxfsffCRWrN8pOizOw3P9kjB3VIu1X34u
      PvjwM7FpT5VwnGIB4kzXAS507F3V4sHJCeLyB14U9RaH2LPk/0RWVKT476bOE47du+yfIj1h
      sHhx+V5hcbpFV32JKDzYLoQQYt+KJ0Ti8LtEs8n+Q3+EHwSPDGCr/kbcOG2yuPLWv4kqk0NI
      fa1+eZGLzQAdtcvFyIhh4sOCWiGEEG5zpXhiTq6Y+/++Epbjjp3/q0li7D3/FZU1NaK6qlo0
      NHcIu+vQklPei7eJlCt/I4r2V4rqmjrRabKKk6xXXrB4lrzrl8K8m64mvHcTf//3m3yzfiOb
      Nm0ib2ch7WZX3+fLnDccLdU0hCSTFRoAgNIvlEHJ0XTU1GI65kgz5WWNdO7+hEtyB5GSkkLu
      1Nm8sHwfAE319VR9/QxDBqSQPmAYc+79CxsqWn7wz3O+8GgQ3FOxgQ++3ILLAY15S3hh90qU
      SgX66IE88vu/EGb06PIyHqDU6tHabJjch3+IhINekw1tgP9xM1hKVCoFQQMu4z+vvkGYxsHi
      5x7lrX++yLVXvc5lv36bolvNINyYmov58y8e4o/PD2bTC3eek9ms7sVLMG/YeA6udHZ41EID
      B1zC738/6ITXVfoA0iJOtw7gO+w72MLW4jpvyzjC1OHJpMedarmn/2jDM0iyl7GtpptxKWG4
      OlvZW1VP5Ixkjl2fN5CRHoNkj2dsThZaFWjnzWXpYwuo65JIDUtgcMThpj44kwdu+YTfbm3g
      +7VUz5C6u3E1nDLA4bzjkQGc3Y0UFhae8LomMJKIhHRCThUJ4UMcaOjkyy37vS3jCBnxoefE
      AP5BmVx3TRzPP/Iwhj/8jM4Nr/FJoYH5r49C7XZSVrCJVl0aE7MSGTvvFvjp3/jl//lxzdAA
      vnz5FRzJ8xgc1sn/7n+Q+pSpTMlORLSX8uQrm8h54O4fTUU1jwxgqsrntdfmn/C6X/wwUkdc
      RlLohfEU+DGiMgRz8+/+SfnDD/PwT2ZhiBvFz/75LJcnqnBbunjnTzexNPovFL/7c5JH3sAz
      TzVy/+8e5M1mF4On3cQ//novUUp/xl46ir8983+8+McqJH0kc37xBE/cPdnbH++ccW7KohzB
      ye7PnubT1lz+eN8V+PvQEOBU6wBLNpXx9ooCLyg6OY/cMJYpOcnelvGD0fnefHq/+tpr/75H
      TzLJ5cBisRz1n4Pg8FAqdq5kf6ucEinj+3gWDLdnMY+++NVRr0h0N9dhDhiCdA5i8mVkzjce
      GUChUKJWH3uJyIxRTJ97O0Oi5RIkMr6PRwYIzZ3LG2/MPVdaZM4CV81W3LX53pZxBM3gWShD
      U7wto994VhqxYze//+NHTPvFr7liSAxIVnYseYuFRQYeeOQuEvzkwN/zjbt+J45tb3hbxhFU
      McMvHgP0lG5ja6eTnwYeWm5HqScxyp/iL7ZQ23wzCSmnC/h101lbwrrNhdjVgWSPncjAuGCU
      J/OMZOfAnnx2ltQi9MFkjhjH0MQQFAqwdNaSv3k7DT0SyUNHMzorCbnggkx/8WgWSB0QiLK9
      gcKyg1idbmy9bezcXQwKPwyG03uruXgjL7/8HuUtXbTUFPLWy6+yq6brhOMkl5XNi97grc+/
      pamzh/aGCjbuLEES4OytZ/7zz7NuXzXdHbUs/+gNFm7aj1veDEOmn3j0BDBmXMKM5Pd579m/
      sW1ZAkp7F/vLKhj+k/9HRoTmNGcKirevR0qaxH13zsTgaGbJe6+zaXsFOUkjjxFl6yhn/c52
      ps69lSnZKWiEnR6LG6UCmoo3UaVK5bbbb2NQhJIdK97n87ydzBiTRoCHSfEyFwcePQGU+kh+
      8ff/ce81o/FXKzGEJXLdg//gT3dOxv+07a+TgwfcZI/OJkinRBsQSW72YGyV5XQclxTfU1mC
      LSqVMNHNji0b2V54AJdSA1ip2t9I/MBckqP8Uar9yMgdTWjzQerkqnQy/cTDsiguHIoQZt7x
      K651u0CtRjis2MxW9EH+R5LVT8SK2a4lRf9dqIQSg9EPRCP245Liuzrb6amrY/myA9jsdiRJ
      QWDaBB66azxmixt9mD/f7cik0fij11uwnEFSvMvl9OQWnHMcTucZJcxLLt8KO3c4HTjPQL/L
      y/o9mwVq2Mx9D33InU88yVVZMSDZ2bn0DV7aYOexv/2BgcGnesDo8dM4MNm/a6ASFvPJkuJB
      b/AjKH4Yd95+HfHBGpqLN/P2e8vY1zoJg0GFzWzGJUCrOJQUb7MZMZ5BUrxafbqu2g+PVqPB
      YOh/trBdrcaX1ty1Gi3qM9BvU3s3XsajLlBXZQlNaiPRwd/NAmmJiwmjvaOGtg7bac4MJiFR
      ULKvArNTwmXtYn95JZrYBIKOe2qExqcgdTXT1WtBCAV+AcH46SWcLgPxyWE0VRbT2G5FuO3U
      7y+iIySO6HOQFC9zceDZIDgmDl3jMlau20bq3Ekoe2tYvmYzSnUkwaetC6Ri6JgJbH7/K95x
      NxPoamVPmY3r7huEFmgs3sTGgyqumTkOv/hhjAj/lgUfvM/e1Ci668poUA9hUJSKIP+JhH39
      PB9/6CQ9XEVRYTmZ027BX96lUqafeGQAfcp0fj57Na+98ySr3lWBJIE+jFse/T0DQ09/6Zih
      l/CzuwJYta4AkzqUeXfNY0TqoTh4u6mTplY1EqDSBjPjtvsJ/vZb9lU14584mvunTiJMrYCg
      ZO74+b2s+3YLtZ0uxs68laljB6E66WKCjMyJeBYLpNIx454/EZe7k+LyOjCGkDxoOOOyU1H3
      0QaVKh3xmRO4K3PCCe8lj76GX43+7h9RoA2IZuqsm5h6ogJC4odw3a1DPPkYMhcxHo5AFOgC
      oxg99SpGTrDTVHuQigOlfPDBRsZN+wmZP4Y9AmR+1JylAQRulxO7zUZ3Wy071q9l3c4iGuob
      aG7vwpCQTebkG86tUhmZ88BZGcDWWMz7ny5ky+Y8iitbUPmFkhwfSGOPk5n3PcVtV48hIlAO
      h5bxfc7KAJaaHXyw+FsSsifz1wdnkBIbgbZ1G394aQmDs7KJlBu/zAXCWRlAoVCA5KSrqYYd
      W7fQlJREhtGEJPV9royML3FWBgjKnsNbL6ezfcNG1u/YyZ68VXT3mDC7VHy98BOMtgkMHzKY
      IIO8ICXj25yVAZQ6f9KHjid9yDjm2U3UVJRQVFZOyc581q59h78W5PPU0y8wKc14rvXKyJxT
      PJsGVShQ6wNIHTqalCGjmHHtDTzksFFTW0lgmFwTSMb3OSeRSN+VFlKq1Oj8AsgYOOxcXFZG
      5rzjmQGEwNbdyK4dBVQ3dxCVNYk0GqiyhDNm7ICjo5plZHwSjwwgOTt579+Ps7Sgmd7uDkbe
      k8ztgZt4fbWD2My/kBF4ungIgctho9dkRSiUGIz+6DVqFKc4RQgJq6kHqxP8/P3Ra9UoEEgu
      J2aTGYcEOr0fRoPulNeQkTkez2qD7lvGBzucPPDbJ2lY/GcaFBoSkhIwmzfS0mYlI/DU1XHt
      3Y18u/xzvt5cjEMVQOa4q7hp9iTCDCePz7d31/DxSy+yrUnHtXfdz1XDE5DcDnat/pgv1xbQ
      ZJJIyBzHvBuuYUBUgLwRnUy/8GyfYIcDpTGQmLAQVCoFktNCRUUlklCh0Zx+CnR//grWFzu4
      +eE/8cg9MzHt/ZpVO+s4aTq720bRxtW0RKST6vd9x8pcs43Faw+QM+se/vzYfcTZ97Nw5TYc
      LjkpXqZ/eGSAoMzJDJPKeOWl59leaab82w95ev4aglPGkBp5utVgGyW7K0idciWjM+JJGzqW
      y8elUbWn+LjdSwAEndW7WL/PwuVXXXLUDvAuKgv3YsgYw5TRQ4hPHsqVM8ZjKiqizcfSBGV8
      F4+6QMqAdP74zyeY//FiyqQ0DGoNoYNv5mcPziXstNEQnbR2GRkYeyj+X6HUEhUTg6K0lR4H
      BBw1g+qydfDt6s0kTJzN8Hgju468Y6G11UpkbCJG7SEf+4cmEq7aRKtNIlYnkI5amhZCnDT/
      VPKx5Wu3JJ1Rnqyv1WB1S244I/3evf8e1waNzpzCb//fBEw9JtDq8dPrUfX5XBEIiaO6OwIh
      BAqhOG4AK2jct4EKVwq35yajUrQedw2BOGqrEiEEQiiO9P+Pr/x+8krwvtWAOLRx4ZmccN6k
      nA3ijPV7F88GwQc38+oXW07yFSjxD48hd8xkcgbFnbAvLYQQEWymtrkThsQiJCdtLS0IQzT+
      R4+B7U1s/LaAAxXN/OWR1Ude3vnqU9Td8AhjIg1sb67H4shCp1Vg6W6gwx1CqF6JQqE4pnCv
      2+1GozlxgK1U+la4hkqlOqnOUyEpfSv9U61Soz4D/Uov6/fIANrAYMrXf0GZ2YhapQAELrsV
      m6TGTwuLlm3lN08+fqhu6DEYGDA0gc/Wf8PegTFE2A+yLn8/0VOnEgC4HFasTjDqQ5hy/a1k
      W7+re9DOivmriZhwGZflJBDYMZCe1zexZU8GE1PUrF+9BU3GKCLkpHiZfuKRARxNRVT7j+O5
      V58iO94IuDmw8hX+s1nL4/dP5r8P3MOXG0pOYgAYNP4axrZ+xpt//wMOlR/pIy7n6jFJKIDS
      1W/z4iYt//rnvcSlZhB35KwGNms3EZmQRnyYHyJoItdMOMDyj59jqUUQkzGCuXPGoZOT4mX6
      iUcGsPd2093ZRmV9IwMjk1EJB1a7g4YDe2lw3kruoEDW9JpPeq4hNIGrbryXkZd141aqCQ4N
      J8BwaPSbNnEej+co8D/hrHCuu/9OtCFhACjVOkbPuJX00R1YXQJjYCihQUZ5DUCm33hkgODM
      SQzXvMtzf3+CgrHD0Lu6KNi6BXX85USEuNjc4iQhK/wUZyvQ+gURlxh0wjuGoEiSTnwZ0BIR
      d/TTRIFa60dk7AWwHaWMT+LZNGjgAP70n3/x6UeLKCwvRqAifvR13HrnbaSou4iffCeXThpw
      rrTKyJxzPJ4GjR08iYefnIjTYUdChVanOby6FsJP7rz5nIiUkTlfeFYc19XD4pf/zttLttJp
      /74is1/cUP76z6eZkHpiL15GxpfwbKf4qo289EkeCaMnEFq5ie7IMaS7q+hKGEFMoG8VnZWR
      ORkezRd21B7AmTyKXz34C4YnGUkcM5uHb5+O1NuDUi8bQMb38SwYLjIaYTZjdbkJDQ2nce9O
      iuvbaW3aT2Ob/VxplJE5b3hkAF36GOZlJmCSFIybOh32fcYf/ruIyIzRJEXI+WAyvo9nKZHK
      SG586C7UxhCCB8zjubfG0W6RiIpNJMIoL0fJ+D4ebpO6hr+/uYa4CTfxuxvGEpucQey5UiYj
      8wPgURfIPzoeZWslaz9dQEGzGR8LTZeR6RPPguGcGnImjqfn2w3831PPcO2ULPw0StTGEHJH
      jSMmSJ4JkvFtPDKAuWYni1fnAzqoK+CzDwsA0EcPJDJj5GkN4DC1kr9mMYtX78KmDmLEZbO5
      /oqRBOmOleSytpG/dhVrNmynoctKYGwGl187j8uzE0ByUrx5KYtWbKK2WyIt91JuvH46iaF+
      ckCcTL/wLBhu6Eyefnoi8F221aGMLqVGT2TU6WeBqgvWsGJLA5ff+gChtgMsW76IdXGJzBoR
      e0zjtXdUsHFnA8On38CcKCPVu9eyZtFqcrPuxNiyj8+/3E7ipNnMilPw7fKVLPomkp/PGYf2
      1Hu0ysgcwSMDaIyhxIZayM/bTlVTOzE5l5Ehaig3RxKdGHeaMx0U5u8m6dKbuXLsMIR7AKKr
      kbXbC5k2IpajK4rqQwZy/6OjCfY7NFyJ1pso2JuHRbho3pmPMm08s6ZPJkyvJFxr4fmPCuiY
      NYpoldz9kukbzwpj2dt446nHWFXWg7mrleF3DSYuJJ93v7aQlP1XBgadaozdSUunkbT4Q6HS
      CpWWmJhYlOUt9LjAeJQqlV8IwYDkdtBeU8SSJd8SOHwS0UobB1qsRMYmYdQdTooPTyJCbKPV
      JojSHpubKoTA7T5xB3lfy1+VTqHzVPiefumC0u9hYawVLChS8IvfPUHtF3+kQaEmNj4Oi3kj
      be02BgadKk7fhculQHkkA16BUqVECPdJ9xgQzh52fbuS5et2EjvySm6aPg6N0oLLKaFUqo4k
      0isUSpRKN+7D01FHfxGnrgrR/y/rh0Byu8+wKoSPVbVwuxEXkH6PDOByu1DqjYQFBtCgUiA5
      TJSWViCEGq32dJcOJjTQSlNHLwBCOOls7wBtCH7H9Vwkp4lNi95nY6XE5BvvZ0xmAn4aFaAn
      NEzH7rZmbM6h6DQKbKYWup1BBBsOJcUfnVwuSdJJd4pXqby7U/nxqNXqk+o8FXaVCl+ysEat
      QX0G+i0q7+Zve1gYawrDKeeVF54lr8JE2TfzeeaDtQSnjSM18nTl0Y2kDwqleMNGqnscWNoq
      2bytmOCBA07YKd7SuI9vS6xcdeMtTM1OPtz4AXQkD0qhpWQ7ew604La3s219Ho7EdKK8fFNl
      Lhw8ywjzT+PPz/yLDz9ZRKl+COEaPWEjp3HPfXMJ7WN7gKETr6Wi8VP+96ff4FZqiRwwjjsn
      pKIEir9+jVe3aPnbk3fSfmAfDY0HePvpPx/amgmAYO564gmyB05lelYZK974JwucgsDoAcz+
      yUT0fW1SLCNzGM/yAbracEUM5b7fZuOw2lFodfjp9PSn1IsxKo05t9xDTnUTLqWOmMRkIgIO
      TZ3G50zjznglfgCDpnL/fSOOO1tDsr8SpcbI1Dl3kzqilh67ICQqgYToELk6tEy/8cgAHbs/
      Ztbjn5OSPZppE8eSmpbO0CEDiQzUH/VrfSqUGIKjGRIcfcI7gdFpDD/8clBMOsNPrKpyBI1f
      MGmDg8/+Q8hc1HhkgNDsa/nrr/3J27qF5Z++jUulJygomOScydx9+82kytskyfg4Hg2CtaFJ
      XH3jXTz13zdY8OkH/OXn8wiVmtiyaQN1nY6+LyAj42U8GwOYWikqKqVoz1Y2bSmguduKUPiR
      kpJCoLxFqswFgGdjgJ2fcu9v3kMfEsPIsROYPWMwg4cMIzMjAaNWNoCM7+ORAfyTJ/HsWzMY
      lBSBv58erUaNUgh6TV1YRTAGnVyjU8a38cgAxqRsJiYBCNy2XvZt2sz6LflUm+y2AAcAABp4
      SURBVNXcdPcjjEiSSxbK+DZnaQCBpauZAxUVVJSXsn39WtbvLscuKQmPTWPYmIkY9fKvv4zv
      c1YG6C1dwx/++z7VdU2YrBLGsDimTh3HrqJabvzVE8ybkIqfzrdibGRkTsZZtVJndwN7yxsZ
      MGkWv773FjLiQjAXfcn9//qYiMgojHLjl7lAOKuWqvYLJjbCn6Y93/DXR/MJjUsmN0mH2ebC
      bLbgdAeg6XujMBkZr3NWBgjMupY3Xx/N/r2F7Ny7j6KC7cz/6AB2NHz6yr+omzyBObNnk9xX
      RJyMjJc5676KX3AMOROjGTb+MqzmXnp6Oti/Ywsr129m354CJl56tWwAGZ/Hs866QoFSpcYY
      GIIxMISY+DSmzLqZ9o4WtEa5NKKM73PuR6tKFWHhpwnflJHxIX600zUnS7Y+2WsqpQKtD22r
      qlQozixRXKkGte88bYVCeWb6VSrQeq+rrBDeTss/TwghcDqdR/52u92ozlOq5He7o5/PTZ9l
      /afmu8T6s9H/ozXA8djt9jNKNj8TfogGdL71A/1IYjp7fFX/j7YL9EOiUCjOa+M531zI2sEz
      /ReNAc7blywkzD2ddJtsHP0oVeoDiAkLPGf/zMXcSM8nF00X6Pwg0VldyMIvllJa34VbqUGv
      lLA4JEKyZ/DXOy7ztkCZPrhongDnBbeDom3rqJYyeOjeOFYcDOSnE0KY/9L7pOUO8ra6fiBw
      mTvYtn4l67eVYjJGM+/aS9i2YCFpc+7mssEnFizwBWwdNRRWNJ32GGNkKkOSw/u8lmwAT5Ak
      zCYT6phRxAVqUSvVGIKSGJqoYP3eg0wfdroCwT6A5KAsbwXL8xoZf/kspI4KhDqcuDAzhWUN
      PmsAa8tBNmzYAUiY2pvpcuiJjglBDbhdZhobexl61e2yAc47KjVR0TEoS+rpCJmIf9Vq8vcp
      qGrqxhbq7Pt8b+OwUn7gIMHDruaqySPZvb4eAIPBQEdXj5fFnZqQQVN5dNBUsHew5N1XqI27
      lp/PHIoScFu7+OK1/6EK71+pHDlk0xOUGtKHT2HyyEQkEUFOTgh5SxZwwJXEzElZ3lbXNxot
      EWGhmKtLqWzrxeF0YTO1cKCynZjIvn89vY4k4XK7cZhM2N3fT4XqdBIVVafvIn2HPAi+yLG1
      VbBwwUIKKjvRqVzYHBAxYDw/mXcFSaE+ntIqHFRuXsLLX+4lZ/xkBsSH0NNQzKpVBYy69SHm
      jk7q8xKyATxC4LJbaGttw2w/tiS40i+ElJhQL+nqJ0IgAIelm7aOLswWBxq9HyHhEQT56S6I
      EpOSw8Te/LWsy9uH2a0ApYGs8dOYMnoQgf1IzJIN4AmSk5L1C3hnyTZ0oRHoj1rp16dP5jc3
      TvKetv7gtLJvVx5d6jgyB6cQYtBeEI3+XCIPgj3B7aShrha/zCt5+KaJHF2UWqG6MHIhXJYO
      du3ezeZVNvyj08nJGUJSTBRhYSEYNL4TJHhyBNaOWtYsX0FJXSduhRIlEm4JYkfO5I7pfY/D
      ZAN4glpDTGwshv0uVP7++F9ov54aAzmXzGXIOBNNdVVUVlWzf/MKVrY6SJ98LbddNtTbCk+P
      y8zO1YvZWqNmUmYURaYYRkf3sGp9JSnx/RvEywY4C6TeBrbsOXjo/x0aLI07WPF1EHEB3ztA
      HZrI2MxEb0k8I9Q6A+ER0VhsDhzmLmoa9tDaafK2rL6xW6htaSMm50YuzWyluSaZcaNDaCr5
      D7Xt1n5dQjbAWSBMLezatevI32HhoTSXF9B81DG6ZI3vG8DtpOHgHjbn7aaxtZ22XheJg7OZ
      ddNdRMcneFtd36g1+Ov1NJstuAKCUDTWYXIFoVYLKhrbgNQ+LyEPgi9m7L1sWbuCamsQmdk5
      DEmNQn1BjYLdNOxey9oDKq6cMYYdn77KjupOuq1arrztAS7LjOjzCrIBPELgsnWzd+tGdpbW
      41IoUHJoq1N90ijuuOr4nW18DCHhcNix9HZSub+EmlYLgZHxDMkcRFigHtUFYAbJZcdid6M3
      GHCa22lu6QJ9IDHR4ej6UZpHXgn2BMlF6aalLFi5B39/BW0uI8nxgdQdrENrMHhbXd8oFFib
      SnjnxedYtrUcq6WHsi1L+e9z71HS1OttdadFSC7sdjuSQoO/0Q+VQmDt7cFic+EfFIy2n3Wp
      5DGAJ7idNNbXoRswgesvMfJ+sT+XT8vAXlNKs8O39u89KU4Lu7esxxQ6lrvvvIooPzX23na+
      eP0/rN5WwdBrc72t8OQIN3UFq1mU38zMm24hJdBF9fYVvPt1ITq9Cpc2jp/edgOp4X2vZMtP
      AE9QKNBqdShdbiSjEU1bK72ShpBADaUHarytrm/cLrpNJnRRsUQG6FGp1BgCQoiJCKCzy4ef
      AG4bB8qK6SWaiGA11raDLF+1idiR13DPXTcT1buXjcX9iwWSDeAJKh0ZQ4cTo+yiXZdCnNjH
      W8//h+V7TGQNTPG2ur7RGRiYkU5vyQbW7SiltraGkj0bySuxkDM42dvqTo3bjdliRRUWglEB
      9RW7qGr3Z8LEbMKDI4iPD6KuoaVfl5K7QJ6gUBI9aDxzE2wYNAbGXX09ERU1OHWhpKcne1td
      3yi0pI++nCktX7D649f5RqvBZleSM20Ol2T5cC6DWkNIcDDuxia6nT3syd+LOn086cFKJJuE
      xWzCL7x/YzB5FuhsEAK324VbOs2tU6jQ+nwowdFI2G1O1DodKp+f/BFYm4p574PPKK/rxhAz
      hLk3zyMnIZie+u3875nPGX/vb5k2uO/VYNkAZ4OQKF7/Oav3NB752yWB+qiZB33KWO6bNcZL
      Aj1ASLTXH6BVCmZQYt/z6N5Doqe1kZZOM4aQKKLCglArwd7TzIEGC4mpCfhr5WjQ84MQtNaU
      UNl8KFygY/9mFhW7uXnGBAyHNwdUB8eRO8CHuxGnwu1k/SdPs8o+hr/fdam31Zx35DHA2aBQ
      EJGUScThfItaZzmLqpzk5I4kyE/jXW0yZ4RsgIsRyU1LbTl17ZYT3xNuatssEPDDy/IGsgHO
      BiGw9nbSYz2U+N7RYwWXk9bWFmz6Q7dUoTUSGeLvTZWnRripK9vJun3NJ33b7fInPvXcFfU6
      19i76imtbjvtMYawBAbE952RJ48BzgYhsWvFmyzOrwPAae2hwyIIDwlEpTw0hWIYcCmP3zLV
      iyJPgxC43U5c7lN/9Qql2mdnsTpL1vL60u2AwNzRQrdTT1RUECpAcltpbu5lyJW3c+9Vw/q8
      lmyAs0EI7NZeLHb3KQ9RaPQE+18A8UAXIEJyH5qCtney/IPXqYmZyX0zhhwpi7LwzRfRTb6b
      OSP6DumWu0Bng0KBzi8QnY8XTfixolCqUCsBhwKHy4XL5kAoVaiVClRaHf5+guKDTSAbQOZk
      CMmFw3nqpxf4dhfoCIZAcrMGsW35Mhb7WxgYF0JPYzGb9/WQ+9P+rWHIXaCLEGvVVl5ZuAUA
      ye3CLSnQHGnsAqfTTVjWNO6Z4aPRoEch2XvYtWkV3+YVYZEUoNAzdPzlXDYhi2C9vBB2XhCS
      C7vDdfqDlGr0/ViJ9AaunkYKKxoP1QbN/4YyRzIzpgxGDUhuMxuXfU3cFXdyw/h0b0vtFy6H
      Dddx0ecKlQZdP55gvvkN+ThS427+9/4aANxOOw4X6A06Ds3/SNisDgKGTOM3N0z0psxTog6M
      ITc3Buzd1BeswRgxgBG5uagA4XbQVbSe3U2d3pbZN5KDg/lf8fHqPSi02mNCm6Nyr+ZOuSzK
      +UEZksKsWbNAOCnLX0lBRywzZuRyaA3YyfovPsUY4eNV4QBUakICA+mp2kd15zBSQnRIjg5q
      6jqwpV0AxX1t3ezcVYCIHMbMSYPQHBXEpw+J7dclZAOcBQq/MDIzw8BpoX7HCtThCQzJzDx8
      MwXdhV/zVXUzkOldoX2h8mPk1Msp/Wghb/z7SYJCQ7B2tSGMGcwaP9Db6vpGoyMsKIAAbQKD
      MjPRnUUUq2wAT1CpCQ0NxbarkP3NoxkcZUDhbKesohkp9gIYWikU6KMG89M77+ZAZR1muwuF
      WkdscgaxYT66in00aiNZ2ZlsW11MbdtgYvy+d4BSrcMg1wY9/7i6a1n8+eds3VeNLiAIe083
      /nFZzLrxOnITL4BuEOB2OXAfn8KsVPnU/sknxdLO0gXzyd9/YlhE7Ni5PHjN8D4vIRvgHOAw
      d1Bb14TV4QalmrCYBCKCjaiVPp5ZIty0lG1l0Zrt2NzHag0aNIU7rsjxkrB+Irno6mg/oTI3
      gMYYQmRw3yuVchfIIwSWthp2FBTRbft+YanyYAWaqIFcOXqAF7X1A4eJ7ZvXUWuN4YrJQ4/p
      Q+vCYrynq78o1QSHhdK7v5jaNtMxu3Qao9WyAc47bjuFG5fxZX47AzNT0R81D6f1t3lPV39R
      qjAaDATHDmTM6NFoffyBdQLCQcXmL/lg5R40GoleyZ9wvZ2GVitDr7iFnLSoPi8hG8AThMBq
      tRA0cDJ33Db1wruZagOZWUPYvqqM6o7hxB81iFSoND67kHcEWw+Fe4sIyLySe0fZWdyYxo3D
      BO+++iGD0uRp0POPSkv6gEFsX1dDo8VJzNE/oQrlMTnCPonDQlFpBR1tdXz08rOHAswOEzx0
      Og9eO8p72vqDELgkCa1/IHp9N8JkQqFPJDbETl5hFePT+p6EkA3gCW4XnV2dtDfv5dN3HITo
      vzeALiGXW6b3PQvhVTQGsiZcTVy244S31AG+nBB/GL0/KbGRVDbU0HNpNqJ0IStFEsVVXQQk
      6Pt1CXkWyBPcTqpLd1HRdGItfXVYClNy+i7P7XWEi/bGOpo7zccMIjVB0QyID/OarP4hcPa2
      U9NuIyY2hq6D21iXVwRhGUy/bBzhxr536ZEN4ClC4JbcuI+bSFcoVWh8fR5duGks3shHX6yh
      zWTDodBhVLvosbiIHz+XR+eN87bC847cBfIIgamlghVLlrCrvAmXQoVWKbC7BIFDr+Svd1zm
      bYGnx2lmz7at2GIm8fg0Pz6viuW2sQbefu49BmdfGJGgnuLjozQfx+2gJH8NhS0BzJs9hcSR
      V3Hv3XOJNgYyatgF0IAkCbvTgTYkDH+dGmw2hCaclEgnm3cf9La6vhECSZLwpBMjG8ATJDcd
      7e1ok4eSmxKNf1AESRmjGZki2FvR6G11faPVEx8Tjaupjs6QJHQVm9mQn8/+ui4UF8DmGNh7
      2bXlGzZu20tLz9mtu8hdIE9QqggJDUVZ00Zv0DAM9QWUN4TRY3HQ6ezxtrq+UerIHH8VqiQT
      amUk4yemsnrjdqS4ccyZ4uORrAAqFTq3hU3bVpG/YRXBsQMYmTuE+OhIQgL9UfejyKk8CPYI
      QVd1IRv2tDB62hQaN37Kis3FdDn9mXbj7VyRE+9tgRcFbqeVltpKysoPUFFeTEO3htQBGWTm
      jCQrLRrNaWKyZAN4iBASbreEUqUCtxObzYFQqtHpdb4fDPcjwWUz0dLUyMGy3eTl7cGsCSYq
      wh9LWxOGtKncPHsywbqT9/blLpCHKBRK1N8toaq1+PlfGDvE/yhw2di/ezMbtxVSVVWHPiGb
      8VfOZfCgAUQG6eguWsM/Pt/GgTG5jEg+eaU7+QlwMeO0Ula8F7M6hOSkREKM2gtj8Psd1g6+
      WbWCDm0y48eOIC7kuEJk5ha2ljSQkjGIqKCTrwzLBvAEyU1PVydo/TAY9KiVigurATkt7Fq7
      iOX5BzEEhBCfMZTRI7KICQ1Ap9Gg9PUunNPCgQMVKEJSSIkK4GzUygbwBJeNrV++w9JdbaQP
      zSZz4EAGZqQQ7KflQvKB22mh4UAJBYWlVNdW0SNCGTp0EAMGDyU9PhyNr24ZY+9g6XuvUBFw
      CQ/cOB7DWUzqq5544oknzrmwiwWFivCEdDIHpqDqqWPX9p3s2rWD/Q3daHR6tFoNGrUapa+7
      QQiUagNapZX6g5U0tnfR09XG/sKdHOxSkZ4Wh84XTaDSEhGsYffWHdiNESREBIIQCCEQKPp1
      3+UnwDnE1FrJhpVL+XpjCZLej+jEAYyadBmXjso4pmSHz+B2Ulexhx0FeykpKsVqTCA7awjD
      R44gKcJIV/Fanv18G1ff+kvGpflguXR7Lzu3bqBgz16Ka8xk5Q458hQIyRjDFSP63qlTngXy
      BCFh6mqlruYgBVu3Ut5qxegfyrX3/pqslHA6StbzyVcLCIl6iNFJRm+rPRGXldKCrVT2RnLV
      bb8kNTYMo0F/pMR7aNIQpk7WEBXgo0F9CgVqrY7wxEFMTjz2rf4m9MsG8AS3nYLVH7N0Ty/Z
      I0cza8pgMlLj8NOqUAARQ3JIrejCZbcBPmgAcah8SMyAHLIz4k8YRCoCYpl2af8yq7yC1p/s
      cdPI9uASchfIE9xOGuuqEQHRRAUbUSo4dhZISLjcEkqlyjdnVCQ7JRsWsXCrmevvuYmBYX4X
      1OAdt43q8lLqjkuIB1Aq1RgCQ0lNTyXoNEVy5SeAJwg3NXs3sk+Rw50zhp/YeI5eJPNFFBoS
      syYwuu0bVixYiu766QQfHqwotQaCjP3LqvIegtayPBZtaSY2LhQ14HaZqaluIzI2ElNnB6lj
      r+OGa8YQcIpBvGwAT1CpiYoO55sVm9idk0ZObCC++EN/Shwm8lYvYWNxCwDvvFh85K2QYTP4
      9dyx3lLWP5wW6hrbSZ40j5/P/G6HmG6+eP1ZGHcjl2j28vTSDRwYkUVOwsm7oLIBPEJJSMIQ
      xg7rYtUnnyJmXkbk4W1SlfpA4iKCvKyvDzRGxl75E7IuOXGzDJX+AtgmUoAkBNbOdiwuCX+1
      EhBo1G72V7dy/dhw3JKEze7gVGMw2QCe4LZTtHUNmwqbAFj+6QdH3jJkTOW3N032lrL+oVCi
      8wtArT9xGKhQKJHw8YQRfSAjsjPZumQVny82kREbTE9TKXmlFsaOiaSrYx86jRZ/46kLZMmD
      YE8QElZzz0k3y1NoDIQE+p3V8vwPhsvKjlWfsWJ7NRqd9pBWIWG1OtDqdSg0AUyacR3jMuNQ
      ++gHkZxWynatZ13ePnqdAqXaSNb4y5iQk0Rn+S5K2vSMnTicwFN8ANkAniA5Kd+5jm2lTRxf
      WxaU6APDGT5uAumRPlpp2W1jx/L3WFkTysxLh6ABJJeZbxYuImzMFYR17GFLtZrbH/gZ6SG+
      21lw2q0n3SGmP4W9fPdTXQgoFLhNLeyvaid3xIDDG2Q4KNi4hcABwzFUbuOD0jruevAOEv19
      cDHJaaOhuQVNeM6R/Q2E20FLwUq2dmu5cfJYNr+9itqmLtJDwr2t9kTcdko3LGT+ykI0BgNH
      T/REj7yWn83oe4VANoAnuB3U19ehSZ7ANTMmHu4vC4xtxewwpnLn1BSenb+C/TXdJGb6YKl0
      jZbw4GC69+/mYFs2GeF6XNYWKirbYNChQ5QKBWqVD5oXwN5DYXEZAekTmXPJoGMasy4wsl+X
      kA3gCQolBr0BW3kFdb1jSAjQgMtMZ7eZFls3BkMMKpUKl/v0W5J6DZUfo6fNpKptAa899Xu0
      /gE4TCaCEodz/ZRBNDVsJTwsjoToYG8rPTlaA9GhwTQqwklKTUN/FuMU2QCeoNSSmTuGvKKl
      vP/aayTGhuHsbqCsWsnoual0dtahVKiJCPXd6VB1SArX33o3Y+pbsLkkFEoN4bEJhAfqsBlH
      85NEFaEBPjoCVurIGJzOxlV7KKtKIvqo4r5qQyBhgYbTnHwIeRB8DjC3VbI1fw/tZgcKlZ4B
      w8cxJDkMU3MltW2QPjQNg4+2IQCX047LfWwzUKjU6DQ+/vtobWf5Fx+xvaL9hLeiR83m/qv7
      3uBDNsA5QEhupOPvokKBSunTs+ggXNTtWcdnK7fjUqqPmbINyryUn109wmvS+oXkxmTqwe48
      bgpICBQ6I6EBfT8BfNzivo7A1HyATXkFdNmO7edrY7OYM3mIl3T1E4eZ3Tu20qVNYdalWcds
      kKEN9uEo0O9QqvAPDOG7SWYhuehsqmZfUQm2kEymj+y7OLFsAE9w2dm9YRnf7LYxYuSgYwZh
      2n7sUu51VGqCAgMJ1CWSNWzYWW0z6k2E5MZi6qS1pZX6iiI2bdtNl0NNeGQ0WZOH9esasgE8
      QuByuQhKH8vc6y7AHWJUegYPHczWFWVUtQ0nwfh9l02h0mDQabwo7jRILhor9pC3s4i6+hoa
      O1wkDhpCmJ+gPTSXB++fib6fUbgX3HfmU6h0DMwcyvZVB6ntHU+c7vu3Lojy6A4zuwtL6epo
      4oMX/n1MDm3wsKv49fU+Gg3qtLBzw1fkNwVzzXW3MSI9Bq0K8hYcoLxX3+/GD7IBPMPtpLGh
      gdbmYj5543UCj+pD6JJGc89MH99iSOPHyMuuJ2Oc84S31H4hXhDUT1QaYuIS0NVUsnXNl9RW
      DCAnJ+vITJYQot/laeRZIE+QXNQfLKKm1XLCW6rgeEYPTvCCqLNHSG4s3a0cqDhIjy6WicOS
      vS3ptEguK/UVRWwvKKKhoZ4DVbVIYYOZPX0caRmDSYzoOwZLNsA5RAiB5HJgNpswO1XERPjo
      CuphhJBwOWyYTSZaqkvZtHUnTZ1mnJKStAnXcsulPj6LdRghubGaumhubqK2vIT8PcWEDJ/N
      PVf2PRCWDXAOEMJNb2sdRcWl1NXWsLdoP7qsmfzxp1O8Le3kCInO+nL2FJdTXVlOeVU7QXEp
      +JkOUKrM4l8P34hR6+NrGKdBSE7MVjf+/UjplMcAZ4MQ2C3dtLd3UHewiF27y+h2CGydjTQo
      k/n1/b8mKtwHg9++w+1g78YvWVYsccn06Vw2O56ggAD2f/0yZbV+F3TjB1AoNfgb+zeDJRvg
      rBCUbficD9dXkzw4i4zciSSnpmMpXMBLe0MYkBjjm1UgvkOhxD8oBI27moMlhQiHmSFDhyJ8
      WPL5QjbAWeJ02pFUOiKiYomNjSY0yB+7Lzf6o1FqyL78FgZMMFG7v5DtuwtZXLCR5oZ63IFa
      Cor2ExMbR3SID9YyOsfIY4CzQQjMHfUcqKzhQMkedpfWow+LQmdpoIxBPPvYrfhpLpxuhJBc
      mDpbqKyspKa8jLzdRYSOmsdvfL0qxDng/wO7ryJq3uWSYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Kappa' width='192'>
      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
      jOrrpl1V/j/tTVbkoFE//wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Precision' width='192'>
      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
      PT2LXFcG/x9qVQMAzjf4EgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recall' width='192'>
      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
      99JQgRYFjwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sensitivity' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Size' width='192'>
      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
      00V2fhH/Hx4XPCtr8d3OAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Specificity' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Standard Deviation' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
